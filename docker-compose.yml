services:
    web:
        build: .
        command: bash -c "mkdir -p /var/log/gunicorn/ && python3 manage.py migrate  && python3 manage.py runserver 0.0.0.0:80"
        tty: true
        restart: always
        volumes:
            - .:/app/
            - static_volume:/app/static
        ports:
            - "8000:80"
        env_file:
            - ./var/.env
        depends_on:
            db:
                condition: service_healthy
        networks:
            - dbnetwork

    db:
        image: postgres
        restart: always
        ports:
            - '127.0.0.1:5432:5432'
        env_file:
            - ./var/.env
        volumes:
            - pg_data:/var/lib/postgresql/data
        healthcheck:
            test: [ "CMD-SHELL", "sh -c 'pg_isready -U root -d tainet'" ]
            interval: 10s
            timeout: 5s
            retries: 5
        networks:
            - dbnetwork

    # nginx:
    #     image: nginx:alpine
    #     restart: unless-stopped
    #     command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    #     depends_on:
    #         - web
    #     ports:
    #         - "80:80"
    #         - "443:443"
    #     volumes:
    #         - static_volume:/app/static
    #     networks:
    #         - dbnetwork

  


volumes:
    pg_data:
    redis_data:
    static_volume:

networks:
  dbnetwork:
    driver: bridge


